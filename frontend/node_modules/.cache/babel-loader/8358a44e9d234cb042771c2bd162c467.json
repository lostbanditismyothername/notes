{"ast":null,"code":"var _jsxFileName = \"/Users/ozgur/ozgur/LAB/full-stack-open/notes-fullstack/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Note from \"./components/Note\";\nimport { useEffect, useState } from \"react\";\nimport * as noteService from \"./services/notes\";\nimport Notification from \"./components/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note..\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    fetchNotes();\n\n    async function fetchNotes() {\n      const notes = await noteService.getAll();\n      setNotes(notes);\n    }\n  }, []); // create a new note\n\n  const addNote = e => {\n    e.preventDefault();\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.lenght + 1\n    };\n    noteService.create(noteObj).then(returnedObj => {\n      setNotes(notes.concat(returnedObj));\n      setNewNote(\"\");\n    });\n  }; // handle inputs\n\n\n  const handleNoteChange = e => setNewNote(e.target.value); // filtered notes\n\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true); // toggle importance of a note\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(note => note.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedObj => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedObj));\n    }).catch(error => {\n      setErrorMessage(`Error while changing note: ${error.message}`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? \"important\" : \"all\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DnjZcpxXyBPvkGkKB4hTLayIwgo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Note","useEffect","useState","noteService","Notification","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","fetchNotes","getAll","addNote","e","preventDefault","noteObj","content","date","Date","toISOString","important","Math","random","id","lenght","create","then","returnedObj","concat","handleNoteChange","target","value","notesToShow","filter","note","toggleImportanceOf","find","changedNote","update","map","catch","error","message","setTimeout"],"sources":["/Users/ozgur/ozgur/LAB/full-stack-open/notes-fullstack/frontend/src/App.js"],"sourcesContent":["import Note from \"./components/Note\";\nimport { useEffect, useState } from \"react\";\nimport * as noteService from \"./services/notes\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note..\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    fetchNotes();\n\n    async function fetchNotes() {\n      const notes = await noteService.getAll();\n      setNotes(notes);\n    }\n  }, []);\n\n  // create a new note\n  const addNote = (e) => {\n    e.preventDefault();\n\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.lenght + 1,\n    };\n\n    noteService.create(noteObj).then((returnedObj) => {\n      setNotes(notes.concat(returnedObj));\n      setNewNote(\"\");\n    });\n  };\n\n  // handle inputs\n  const handleNoteChange = (e) => setNewNote(e.target.value);\n\n  // filtered notes\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important === true);\n\n  // toggle importance of a note\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((note) => note.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedObj) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedObj)));\n      })\n      .catch((error) => {\n        setErrorMessage(`Error while changing note: ${error.message}`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>show {showAll ? \"important\" : \"all\"}</button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}